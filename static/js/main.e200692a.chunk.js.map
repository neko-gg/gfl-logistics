{"version":3,"sources":["localization.js","settings.js","style.js","calculator.js","index.js","logistics.js"],"names":["strings","LocalizedStrings","en","checkFrequency","question","answerConstantlyValue","answerConstantly","answerSingular","answerPlural","longAnswerConstantlyValue","longAnswerConstantly","longAnswerSingular","longAnswerPlural","valueLabel","handleLabelConstantly","handleLabelSingular","handleLabelPlural","runTime","unlockedChapters","single","range","longAnswerSingle","longAnswerRange","handleLabel","resourceWeights","multiplier","answer","longAnswer","manpowerLabel","ammunitionLabel","rationLabel","partsLabel","itemWeights","tDollContractLabel","equipmentContractLabel","quickProductionContractLabel","quickRepairContractLabel","tokenLabel","results","headers","mission","runs","manpower","ammunition","ration","parts","tDollContract","equipmentContract","quickProductionContract","quickRepairContract","token","value","defaults","activeStep","manpowerWeight","ammunitionWeight","rationWeight","partsWeight","tDollContractWeight","equipmentContractWeight","quickProductionContractWeight","quickRepairContractWeight","tokenWeight","resultsOrder","resultsOrderBy","useStyles","makeStyles","theme","root","width","maxWidth","margin","fontSize","fontWeight","fontFamily","button","marginTop","spacing","marginRight","float","position","color","importantContent","importantAnswer","slider","sliderLabel","minWidth","textAlign","sliderDescription","marginBottom","stepLabel","labelledSlider","display","alignItems","height","marginLeft","top","title","stepper","calculate","configuration","getRuns","time","Math","max","floor","effectiveTime","missions","flatMap","map","chapter","filter","rewards","resources","items","mapValue","ReactDOM","render","classes","React","useState","setActiveStep","setCheckFrequency","setRunTime","setUnlockedChapters","setManpowerWeight","setAmmunitionWeight","setRationWeight","setPartsWeight","setTDollContractWeight","setEquipmentContractWeight","setQuickProductionContractWeight","setQuickRepairContractWeight","setTokenWeight","setResultsOrder","setResultsOrderBy","label","weight","weightSetter","spanImportantContent","content","className","spanImportantAnswer","steps","formatString","bigMargin","sliders","setValue","labelDisplay","step","min","resource","item","handleResultsSort","header","event","Stepper","nonLinear","orientation","index","Step","key","StepButton","onClick","StepLabel","StepContent","sliderKey","Slider","defaultValue","onChange","newValue","getAriaValueText","valueLabelDisplay","marks","valueLabelFormat","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","sortDirection","TableSortLabel","active","direction","TableBody","sort","a","b","comparison","scope","Button","document","querySelector"],"mappings":"w7OAEaA,EAAU,I,OAAIC,GACvB,CACIC,GAAI,CACAC,eAAgB,CACZC,SAAU,sCACVC,sBAAuB,aACvBC,iBAAkB,OAClBC,eAAgB,kBAChBC,aAAc,mBACdC,0BAA2B,aAC3BC,qBAAsB,4BACtBC,mBAAoB,uCACpBC,iBAAkB,wCAClBC,WAAY,OACZC,sBAAuB,aACvBC,oBAAqB,WACrBC,kBAAmB,aAEvBC,QAAS,CACLb,SAAU,6CACVG,eAAgB,gBAChBC,aAAc,iBACdG,mBAAoB,wCACpBC,iBAAkB,yCAClBC,WAAY,OACZE,oBAAqB,WACrBC,kBAAmB,aAEvBE,iBAAkB,CACdd,SAAU,oCACVe,OAAQ,MACRC,MAAO,UACPb,eAAgB,eAChBC,aAAc,gBACda,iBAAkB,+BAClBC,gBAAiB,gCACjBC,YAAa,eAEjBC,gBAAiB,CACbpB,SAAU,4CACVqB,WAAY,OACZC,OAAQ,mEACRC,WAAY,mHACZJ,YAAa,OACbV,WAAY,OACZe,cAAe,WACfC,gBAAiB,aACjBC,YAAa,SACbC,WAAY,SAEhBC,YAAa,CACT5B,SAAU,sCACVqB,WAAY,MACZC,OAAQ,qJACRC,WAAY,qQACZM,mBAAoB,kBACpBC,uBAAwB,qBACxBC,6BAA8B,4BAC9BC,yBAA0B,wBAC1BC,WAAY,SAEhBC,QAAS,CACLC,QAAS,CACLC,QAAS,UACTC,KAAM,OACNC,SAAU,WACVC,WAAY,aACZC,OAAQ,SACRC,MAAO,QACPC,cAAe,kBACfC,kBAAmB,qBACnBC,wBAAyB,4BACzBC,oBAAqB,wBACrBC,MAAO,QACPC,MAAO,aC1EdC,EAAW,CACpBC,WAAY,EAEZlD,eAAgB,EAChBc,QAAS,EACTC,iBAAkB,CAAC,EAAG,IAEtBoC,eAAgB,EAChBC,iBAAkB,EAClBC,aAAc,EACdC,YAAa,EAEbC,oBAAqB,IACrBC,wBAAyB,IACzBC,8BAA+B,IAC/BC,0BAA2B,IAC3BC,YAAa,IAEbC,aAAc,OACdC,eAAgBhE,EAAQsC,QAAQC,QAAQY,O,QCnB/Bc,EAAYC,aAAW,SAAAC,GAAK,MAAK,CAC1CC,KAAM,CACFC,MAAO,OACPC,SAAU,OACVC,OAAQ,SACRC,SAAU,WACVC,WAAY,MACZC,WAAY,yBAEhBC,OAAQ,CACJC,UAAWT,EAAMU,QAAQ,GACzBC,YAAaX,EAAMU,QAAQ,GAC3BE,MAAO,SAEXrD,OAAQ,CACJsD,SAAU,WACVC,MAAO,sBACPR,WAAY,OAEhBS,iBAAkB,CACdT,WAAY,OAEhBU,gBAAiB,CACbV,WAAY,MACZQ,MAAO,uBAEXG,OAAQ,CACJf,MAAO,QAEXgB,YAAa,CACThB,MAAO,MACPiB,SAAU,MACVC,UAAW,SAEfC,kBAAmB,CACfC,aAAc,SAElBC,UAAW,CACPH,UAAW,QAEfI,eAAgB,CACZC,QAAS,OACTC,WAAY,SACZC,OAAQ,MACR,YAAa,CACTC,WAAY,MACZC,IAAK,YAGbC,MAAO,CACH5B,MAAO,OACPkB,UAAW,SACXf,SAAU,QACVC,WAAY,OAEhByB,QAAS,CACLT,aAAc,W,gBCxDTU,EAAY,SAAAC,GACrB,IAIMC,EAAU,SAAAC,GAAI,OAAIC,KAAKC,IAAI,EAAGD,KAAKE,MAJlB,KAIwBL,EAAcnF,QADvC,SAAAqF,GAAI,OAAIC,KAAKC,IAAIF,EAHhB,KAGsBF,EAAcjG,gBAC6BuG,CAAcJ,MAmBtG,OAAOK,EAASC,SAAQ,SAAAD,GAAQ,OAAIA,EAASA,SAASE,KAAI,SAAArE,GAAO,sBAASA,EAAT,CAAkBsE,QAASH,EAASG,gBACrFC,QAAO,SAAAvE,GAAO,OAAIA,EAAQ8D,MAxBnB,KAwB2BF,EAAcnF,WAChD8F,QAAO,SAAAvE,GAAO,OAAIA,EAAQsE,SAAWV,EAAclF,iBAAiB,MACpE6F,QAAO,SAAAvE,GAAO,OAAIA,EAAQsE,SAAWV,EAAclF,iBAAiB,MACpE2F,KAAI,SAAArE,GAAO,OArBV,SAAAA,GAAO,MAAK,CACzBsE,QAAStE,EAAQsE,QACjBtE,QAASA,EAAQA,QACjBC,KAAM4D,EAAQ7D,EAAQ8D,MACtBU,QAASxE,EAAQwE,QACjB7D,OAAQX,EAAQwE,QAAQC,UAAUvE,SAAW0D,EAAc1D,SACnDF,EAAQwE,QAAQC,UAAUtE,WAAayD,EAAczD,WACrDH,EAAQwE,QAAQC,UAAUrE,OAASwD,EAAcxD,OACjDJ,EAAQwE,QAAQC,UAAUpE,MAAQuD,EAAcvD,MAblC,IAcdL,EAAQwE,QAAQE,MAAMpE,cAAoCsD,EAActD,cAd1D,IAedN,EAAQwE,QAAQE,MAAMnE,kBAAwCqD,EAAcrD,kBAf9D,IAgBdP,EAAQwE,QAAQE,MAAMlE,wBAA8CoD,EAAcpD,wBAhBpE,IAiBdR,EAAQwE,QAAQE,MAAMjE,oBAA0CmD,EAAcnD,oBAjBhE,IAkBdT,EAAQwE,QAAQE,MAAMhE,MAA4BkD,EAAclD,OAC/DmD,EAAQ7D,EAAQ8D,OAOEa,CAAS3E,OC1B5C4E,IAASC,OAAO,mBCoBD,WACX,IAAMC,EAAUrD,IAD0B,EAGNsD,IAAMC,SAASpE,EAASC,YAHlB,mBAGnCA,EAHmC,KAGvBoE,EAHuB,OAKEF,IAAMC,SAASpE,EAASjD,gBAL1B,mBAKnCA,EALmC,KAKnBuH,EALmB,OAMZH,IAAMC,SAASpE,EAASnC,SANZ,mBAMnCA,EANmC,KAM1B0G,EAN0B,OAOMJ,IAAMC,SAASpE,EAASlC,kBAP9B,mBAOnCA,EAPmC,KAOjB0G,EAPiB,OASEL,IAAMC,SAASpE,EAASE,gBAT1B,mBASnCA,EATmC,KASnBuE,EATmB,OAUMN,IAAMC,SAASpE,EAASG,kBAV9B,mBAUnCA,EAVmC,KAUjBuE,EAViB,OAWFP,IAAMC,SAASpE,EAASI,cAXtB,mBAWnCA,EAXmC,KAWrBuE,EAXqB,OAYJR,IAAMC,SAASpE,EAASK,aAZpB,mBAYnCA,EAZmC,KAYtBuE,GAZsB,QAcYT,IAAMC,SAASpE,EAASM,qBAdpC,qBAcnCA,GAdmC,MAcduE,GAdc,SAeoBV,IAAMC,SAASpE,EAASO,yBAf5C,qBAenCA,GAfmC,MAeVuE,GAfU,SAgBgCX,IAAMC,SAASpE,EAASQ,+BAhBxD,qBAgBnCA,GAhBmC,MAgBJuE,GAhBI,SAiBwBZ,IAAMC,SAASpE,EAASS,2BAjBhD,qBAiBnCA,GAjBmC,MAiBRuE,GAjBQ,SAkBJb,IAAMC,SAASpE,EAASU,aAlBpB,qBAkBnCA,GAlBmC,MAkBtBuE,GAlBsB,SAoBFd,IAAMC,SAASpE,EAASW,cApBtB,qBAoBnCA,GApBmC,MAoBrBuE,GApBqB,SAqBEf,IAAMC,SAASpE,EAASY,gBArB1B,qBAqBnCA,GArBmC,MAqBnBuE,GArBmB,MAuBpCtB,GAAY,CACd,CAACuB,MAAOxI,EAAQwB,gBAAgBI,cAAe6G,OAAQnF,EAAgBoF,aAAcb,GACrF,CAACW,MAAOxI,EAAQwB,gBAAgBK,gBAAiB4G,OAAQlF,EAAkBmF,aAAcZ,GACzF,CAACU,MAAOxI,EAAQwB,gBAAgBM,YAAa2G,OAAQjF,EAAckF,aAAcX,GACjF,CAACS,MAAOxI,EAAQwB,gBAAgBO,WAAY0G,OAAQhF,EAAaiF,aAAcV,KAG7Ed,GAAQ,CACV,CAACsB,MAAOxI,EAAQgC,YAAYC,mBAAoBwG,OAAQ/E,GAAqBgF,aAAcT,IAC3F,CAACO,MAAOxI,EAAQgC,YAAYE,uBAAwBuG,OAAQ9E,GAAyB+E,aAAcR,IACnG,CAACM,MAAOxI,EAAQgC,YAAYG,6BAA8BsG,OAAQ7E,GAA+B8E,aAAcP,IAC/G,CAACK,MAAOxI,EAAQgC,YAAYI,yBAA0BqG,OAAQ5E,GAA2B6E,aAAcN,IACvG,CAACI,MAAOxI,EAAQgC,YAAYK,WAAYoG,OAAQ3E,GAAa4E,aAAcL,KAGzEM,GAAuB,SAAAC,GAAO,OAAI,0BAAMC,UAAWvB,EAAQpC,kBAAmB0D,IAC9EE,GAAsB,SAAApH,GAAM,OAAI,0BAAMmH,UAAWvB,EAAQnC,iBAAkBzD,IAE3EqH,GAAQ,CACV,CACI3I,SAAUJ,EAAQG,eAAeC,SACjCsB,OAAQ,kBAAM1B,EAAQgJ,aAAa,IAAM7I,EAAiBH,EAAQG,eAAeG,iBAAmB,IAAMH,EAAiBH,EAAQG,eAAeI,eAAiBP,EAAQG,eAAeK,aAAcsI,GAAoB,IAAM3I,EAAiBH,EAAQG,eAAeE,sBAAwBF,KAClSwB,WAAY,kBAAM3B,EAAQgJ,aAAa,IAAM7I,EAAiBH,EAAQG,eAAeO,qBAAuB,IAAMP,EAAiBH,EAAQG,eAAeQ,mBAAqBX,EAAQG,eAAeS,iBAAkB+H,GAAqB,IAAMxI,EAAiBH,EAAQG,eAAeM,0BAA4BN,KACvT8I,WAAW,EACXC,QAAS,CAAC,CACN/F,MAAOhD,EACPgJ,SAAUzB,EACVnG,YAAa,SAAA4B,GAAK,OAAInD,EAAQgJ,aAAa,IAAM7F,EAAQnD,EAAQG,eAAeW,sBAAwB,IAAMqC,EAAQnD,EAAQG,eAAeY,oBAAsBf,EAAQG,eAAea,kBAAmBmC,IAC7MtC,WAAY,SAAAsC,GAAK,OAAInD,EAAQgJ,aAAahJ,EAAQG,eAAeU,WAAYsC,IAC7EqF,MAAO,KACPY,aAAc,OACdH,WAAW,EACXI,KAAM,EACNC,IAAK,EACL9C,IAAK,MAGb,CACIpG,SAAUJ,EAAQiB,QAAQb,SAC1BsB,OAAQ,kBAAM1B,EAAQgJ,aAAa,IAAM/H,EAAUjB,EAAQiB,QAAQV,eAAiBP,EAAQiB,QAAQT,aAAcsI,GAAoB7H,KACtIU,WAAY,kBAAM3B,EAAQgJ,aAAa,IAAM/H,EAAUjB,EAAQiB,QAAQN,mBAAqBX,EAAQiB,QAAQL,iBAAkB+H,GAAqB1H,KACnJgI,WAAW,EACXC,QAAS,CAAC,CACN/F,MAAOlC,EACPkI,SAAUxB,EACVpG,YAAa,SAAA4B,GAAK,OAAInD,EAAQgJ,aAAa,IAAM7F,EAAQnD,EAAQiB,QAAQF,oBAAsBf,EAAQiB,QAAQD,kBAAmBmC,IAClItC,WAAY,SAAAsC,GAAK,OAAInD,EAAQgJ,aAAahJ,EAAQiB,QAAQJ,WAAYsC,IACtEqF,MAAO,KACPY,aAAc,OACdH,WAAW,EACXI,KAAM,EACNC,IAAK,EACL9C,IAAK,MAGb,CACIpG,SAAUJ,EAAQkB,iBAAiBd,SACnCsB,OAAQ,kBAAMR,EAAiB,KAAOA,EAAiB,GACvClB,EAAQgJ,aAAahJ,EAAQkB,iBAAiBX,eAAgBuI,GAAoB9I,EAAQgJ,aAAahJ,EAAQkB,iBAAiBC,OAAQD,EAAiB,MACzJlB,EAAQgJ,aAAahJ,EAAQkB,iBAAiBV,aAAcsI,GAAoB9I,EAAQgJ,aAAahJ,EAAQkB,iBAAiBE,MAAOF,EAAiB,GAAIA,EAAiB,OAC3LS,WAAY,kBAAMT,EAAiB,KAAOA,EAAiB,GACvClB,EAAQgJ,aAAahJ,EAAQkB,iBAAiBG,iBAAkBsH,GAAqB3I,EAAQgJ,aAAahJ,EAAQkB,iBAAiBC,OAAQD,EAAiB,MAC5JlB,EAAQgJ,aAAahJ,EAAQkB,iBAAiBI,gBAAiBqH,GAAqB3I,EAAQgJ,aAAahJ,EAAQkB,iBAAiBE,MAAOF,EAAiB,GAAIA,EAAiB,OACnM+H,WAAW,EACXC,QAAS,CAAC,CACN/F,MAAOjC,EACPiI,SAAUvB,EACVrG,YAAa,SAAA4B,GAAK,OAAInD,EAAQgJ,aAAahJ,EAAQkB,iBAAiBK,YAAa4B,IACjFtC,WAAY,SAAAsC,GAAK,OAAIA,GACrBqF,MAAO,KACPY,aAAc,OACdH,WAAW,EACXI,KAAM,EACNC,IAAK,EACL9C,IAAK,MAGb,CACIpG,SAAUJ,EAAQwB,gBAAgBpB,SAClCsB,OAAQ,kBAAM1B,EAAQgJ,aAAahJ,EAAQwB,gBAAgBE,OACxBoH,GAAoB9I,EAAQgJ,aAAahJ,EAAQwB,gBAAgBC,WAAY6B,IAC7EwF,GAAoB9I,EAAQgJ,aAAahJ,EAAQwB,gBAAgBC,WAAY8B,IAC7EuF,GAAoB9I,EAAQgJ,aAAahJ,EAAQwB,gBAAgBC,WAAY+B,IAC7EsF,GAAoB9I,EAAQgJ,aAAahJ,EAAQwB,gBAAgBC,WAAYgC,MAChH9B,WAAY,kBAAM3B,EAAQgJ,aAAR,MAAAhJ,EAAO,CAAcA,EAAQwB,gBAAgBG,YAAtC,mBACiBsF,GAAUJ,KAAI,SAAA0C,GAAQ,OAAIZ,GAAqB3I,EAAQgJ,aAAahJ,EAAQwB,gBAAgBC,WAAY8H,EAASd,gBAC3JQ,WAAW,EACXC,QAASjC,GAAUJ,KAAI,SAAA0C,GAAQ,MAAK,CAChCpG,MAAOoG,EAASd,OAChBU,SAAUI,EAASb,aACnBnH,YAAa,SAAA4B,GAAK,OAAInD,EAAQgJ,aAAahJ,EAAQwB,gBAAgBD,YAAa4B,IAChFtC,WAAY,SAAAsC,GAAK,OAAInD,EAAQgJ,aAAahJ,EAAQwB,gBAAgBX,WAAYsC,IAC9EqF,MAAOe,EAASf,MAChBS,WAAW,EACXG,aAAc,KACdC,KAAM,EACNC,IAAK,EACL9C,IAAK,QAGb,CACIpG,SAAUJ,EAAQgC,YAAY5B,SAC9BsB,OAAQ,kBAAM1B,EAAQgJ,aAAahJ,EAAQgC,YAAYN,OACpBoH,GAAoB9I,EAAQgJ,aAAahJ,EAAQgC,YAAYP,WAAYiC,KACzEoF,GAAoB9I,EAAQgJ,aAAahJ,EAAQgC,YAAYP,WAAYkC,KACzEmF,GAAoB9I,EAAQgJ,aAAahJ,EAAQgC,YAAYP,WAAYmC,KACzEkF,GAAoB9I,EAAQgJ,aAAahJ,EAAQgC,YAAYP,WAAYoC,KACzEiF,GAAoB9I,EAAQgJ,aAAahJ,EAAQgC,YAAYP,WAAYqC,OAC5GnC,WAAY,kBAAM3B,EAAQgJ,aAAR,MAAAhJ,EAAO,CAAcA,EAAQgC,YAAYL,YAAlC,mBACiBuF,GAAML,KAAI,SAAA2C,GAAI,OAAIb,GAAqB3I,EAAQgJ,aAAahJ,EAAQgC,YAAYP,WAAY+H,EAAKf,gBAC3IQ,WAAW,EACXC,QAAShC,GAAML,KAAI,SAAA2C,GAAI,MAAK,CACxBrG,MAAOqG,EAAKf,OACZU,SAAUK,EAAKd,aACfnH,YAAa,SAAA4B,GAAK,OAAIA,GACtBtC,WAAY,SAAAsC,GAAK,OAAIA,GACrBqF,MAAOgB,EAAKhB,MACZS,WAAW,EACXG,aAAc,KACdC,KAAM,GACNC,IAAK,EACL9C,IAAK,UA2BXiD,GAAoB,SAAAC,GAAM,OAAI,SAAAC,GAChCrB,GAAgBtE,KAAmB0F,GAA2B,SAAjB3F,GAA0B,MAAQ,QAC/EwE,GAAkBmB,KAGtB,OACI,yBAAKb,UAAWvB,EAAQlD,MACpB,yBAAKyE,UAAWvB,EAAQrB,OAAxB,yCACA,kBAAC2D,EAAA,EAAD,CAASf,UAAWvB,EAAQpB,QAAS2D,WAAS,EAACC,YAAY,WAAWzG,WAAYA,GAC7E0F,GAAMlC,KAAI,SAACwC,EAAMU,GAAP,OACP,kBAACC,EAAA,EAAD,CAAMC,IAAKZ,EAAKjJ,UACZ,kBAAC8J,EAAA,EAAD,CAAYC,QAAS,kBAAM1C,EAAcsC,KACrC,kBAACK,EAAA,EAAD,CAAWvB,UAAWvB,EAAQ5B,WAAY2D,EAAKjJ,SAAUiD,IAAe0G,EAAS,yBAAKlB,UAAWvB,EAAQ5F,QAAS2H,EAAK3H,UAAmB,OAE9I,kBAAC2I,EAAA,EAAD,KACI,6BACI,yBAAKxB,UAAWQ,EAAKJ,UAAY3B,EAAQ9B,kBAAoB,MAAO6D,EAAK1H,cACxE0H,EAAKH,QAAQrC,KAAI,SAACzB,EAAQkF,GAAT,OACd,0BAAML,IAAKK,EAAWzB,UAAWzD,EAAO6D,UAAY3B,EAAQ3B,eAAiB,MACxEP,EAAOoD,MAAQ,0BAAMK,UAAWvB,EAAQjC,aAAcD,EAAOoD,OAAgB,KAC9E,kBAAC+B,EAAA,EAAD,CAAQN,IAAKK,EAAWzB,UAAWvB,EAAQlC,OACnCoF,aAAcpF,EAAOjC,MACrBsH,SAAU,SAACd,EAAOe,GAAR,OAAqBtF,EAAO+D,SAASuB,IAC/CC,iBAAkBvF,EAAO7D,YACzBqJ,kBAAmBxF,EAAOgE,aAC1BC,KAAMjE,EAAOiE,KACbwB,OAAK,EACLC,iBAAkB1F,EAAOvE,WACzByI,IAAKlE,EAAOkE,IACZ9C,IAAKpB,EAAOoB,iBAShD,kBAACuE,EAAA,EAAD,CAAgBC,UAAWC,KACvB,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAYrL,EAAQsC,QAAQC,QAAQC,SACnC,CAACxC,EAAQsC,QAAQC,QAAQE,KACxBzC,EAAQsC,QAAQC,QAAQG,SACxB1C,EAAQsC,QAAQC,QAAQI,WACxB3C,EAAQsC,QAAQC,QAAQK,OACxB5C,EAAQsC,QAAQC,QAAQM,MACxB7C,EAAQsC,QAAQC,QAAQY,OAAO0D,KAAI,SAAA6C,GAAM,OAAI,kBAAC2B,EAAA,EAAD,CAAWpB,IAAKP,EAAQ4B,MAAM,QAAQC,cAAevH,KAAmB0F,GAAS3F,IAC5H,kBAACyH,EAAA,EAAD,CAAgBC,OAAQzH,KAAmB0F,EAAQgC,UAAW1H,KAAmB0F,EAAS3F,GAAe,OAAQoG,QAASV,GAAkBC,IAAUA,SAIlK,kBAACiC,EAAA,EAAD,KACKxF,EAAU,CACIlF,QAASA,EACTd,eAAgBA,EAChBe,iBAAkBA,EAClBwB,SAAUY,EACVX,WAAYY,EACZX,OAAQY,EACRX,MAAOY,EACPX,cAAeY,GACfX,kBAAmBY,GACnBX,wBAAyBY,GACzBX,oBAAqBY,GACrBX,MAAOY,KAEpB8H,MAAK,SAACC,EAAGC,GACP,IAAIC,EAAa,EACjB,OAAQ/H,IACJ,KAAKhE,EAAQsC,QAAQC,QAAQE,KACzBsJ,EAAaF,EAAEpJ,KAAOqJ,EAAErJ,KACxB,MACJ,KAAKzC,EAAQsC,QAAQC,QAAQG,SACzBqJ,EAAaF,EAAE7E,QAAQC,UAAUvE,SAAWoJ,EAAE9E,QAAQC,UAAUvE,SAChE,MACJ,KAAK1C,EAAQsC,QAAQC,QAAQI,WACzBoJ,EAAaF,EAAE7E,QAAQC,UAAUtE,WAAamJ,EAAE9E,QAAQC,UAAUtE,WAClE,MACJ,KAAK3C,EAAQsC,QAAQC,QAAQK,OACzBmJ,EAAaF,EAAE7E,QAAQC,UAAUrE,OAASkJ,EAAE9E,QAAQC,UAAUrE,OAC9D,MACJ,KAAK5C,EAAQsC,QAAQC,QAAQM,MACzBkJ,EAAaF,EAAE7E,QAAQC,UAAUpE,MAAQiJ,EAAE9E,QAAQC,UAAUpE,MAC7D,MACJ,KAAK7C,EAAQsC,QAAQC,QAAQY,MAC7B,QACI4I,EAAaF,EAAE1I,MAAQ2I,EAAE3I,MAEjC,MAAO,QAAUY,GAAegI,GAAc,EAAIA,KACnDlF,KAAI,SAAArE,GAAO,OACV,kBAAC4I,EAAA,EAAD,CAAUnB,IAAKzH,EAAQsE,QAAU,IAAMtE,EAAQA,SAC3C,kBAAC6I,EAAA,EAAD,CAAWL,UAAU,KAAKgB,MAAM,OAAOxJ,EAAQsE,QAA/C,IAAyDtE,EAAQA,SACjE,kBAAC6I,EAAA,EAAD,CAAWC,MAAM,SAAS9I,EAAQC,MAClC,kBAAC4I,EAAA,EAAD,CAAWC,MAAM,SAAS9I,EAAQwE,QAAQC,UAAUvE,SAAWF,EAAQC,MACvE,kBAAC4I,EAAA,EAAD,CAAWC,MAAM,SAAS9I,EAAQwE,QAAQC,UAAUtE,WAAaH,EAAQC,MACzE,kBAAC4I,EAAA,EAAD,CAAWC,MAAM,SAAS9I,EAAQwE,QAAQC,UAAUrE,OAASJ,EAAQC,MACrE,kBAAC4I,EAAA,EAAD,CAAWC,MAAM,SAAS9I,EAAQwE,QAAQC,UAAUpE,MAAQL,EAAQC,MACpE,kBAAC4I,EAAA,EAAD,CAAWC,MAAM,SAAS9I,EAAQW,cAOtD,kBAAC8I,EAAA,EAAD,CAAQpD,UAAWvB,EAAQ3C,OAAQwF,QAhIvB,WAChB1C,EAAcrE,EAASC,YAEvBqE,EAAkBtE,EAASjD,gBAC3BwH,EAAWvE,EAASnC,SACpB2G,EAAoBxE,EAASlC,kBAE7B2G,EAAkBzE,EAASE,gBAC3BwE,EAAoB1E,EAASG,kBAC7BwE,EAAgB3E,EAASI,cACzBwE,GAAe5E,EAASK,aAExBwE,GAAuB7E,EAASM,qBAChCwE,GAA2B9E,EAASO,yBACpCwE,GAAiC/E,EAASQ,+BAC1CwE,GAA6BhF,EAASS,2BACtCwE,GAAejF,EAASU,aAExBwE,GAAgBlF,EAASW,cACzBwE,GAAkBnF,EAASY,iBA6GkCiB,MAAM,aAA/D,YDzSI,MAAeiH,SAASC,cAAc,Y","file":"static/js/main.e200692a.chunk.js","sourcesContent":["import LocalizedStrings from 'react-localization';\r\n\r\nexport const strings = new LocalizedStrings(\r\n    {\r\n        en: {\r\n            checkFrequency: {\r\n                question: 'How often can you check your phone?',\r\n                answerConstantlyValue: 'Constantly',\r\n                answerConstantly: '{0}.',\r\n                answerSingular: 'Every {0} hour.',\r\n                answerPlural: 'Every {0} hours.',\r\n                longAnswerConstantlyValue: 'constantly',\r\n                longAnswerConstantly: 'I can check my phone {0}.',\r\n                longAnswerSingular: 'I can check my phone every {0} hour.',\r\n                longAnswerPlural: 'I can check my phone every {0} hours.',\r\n                valueLabel: '{0}h',\r\n                handleLabelConstantly: 'Constantly',\r\n                handleLabelSingular: '{0} hour',\r\n                handleLabelPlural: '{0} hours'\r\n            },\r\n            runTime: {\r\n                question: 'How long do you want to run logistics for?',\r\n                answerSingular: 'For {0} hour.',\r\n                answerPlural: 'For {0} hours.',\r\n                longAnswerSingular: 'I want to run logistics for {0} hour.',\r\n                longAnswerPlural: 'I want to run logistics for {0} hours.',\r\n                valueLabel: '{0}h',\r\n                handleLabelSingular: '{0} hour',\r\n                handleLabelPlural: '{0} hours'\r\n            },\r\n            unlockedChapters: {\r\n                question: 'Which chapters have you unlocked?',\r\n                single: '{0}',\r\n                range: '{0}-{1}',\r\n                answerSingular: 'Chapter {0}.',\r\n                answerPlural: 'Chapters {0}.',\r\n                longAnswerSingle: 'I have unlocked chapter {0}.',\r\n                longAnswerRange: 'I have unlocked chapters {0}.',\r\n                handleLabel: 'Chapter {0}'\r\n            },\r\n            resourceWeights: {\r\n                question: 'How much do you care about each resource?',\r\n                multiplier: '{0}x',\r\n                answer: '{0}\\xa0manpower, {1}\\xa0ammunition, {2}\\xa0ration, {3}\\xa0parts.',\r\n                longAnswer: 'I care: {0}\\xa0about\\xa0manpower, {1}\\xa0about\\xa0ammunition, {2}\\xa0about\\xa0ration, and {3}\\xa0about\\xa0parts.',\r\n                handleLabel: '{0}x',\r\n                valueLabel: '{0}x',\r\n                manpowerLabel: 'Manpower',\r\n                ammunitionLabel: 'Ammunition',\r\n                rationLabel: 'Ration',\r\n                partsLabel: 'Parts'\r\n            },\r\n            itemWeights: {\r\n                question: 'How much is each item worth to you?',\r\n                multiplier: '{0}',\r\n                answer: 'T-Doll\\xa0Contract\\xa0{0}, Equipment\\xa0Contract\\xa0{1}, Quick\\xa0Production\\xa0Contract\\xa0{2}, Quick\\xa0Repair\\xa0Contract\\xa0{3}, Token\\xa0{4}.',\r\n                longAnswer: 'To me, a\\xa0T-Doll\\xa0Contract\\xa0is\\xa0worth\\xa0{0}, an\\xa0Equipment\\xa0Contract\\xa0is\\xa0worth\\xa0{1}, a\\xa0Quick\\xa0Production\\xa0Contract\\xa0is\\xa0worth\\xa0{2}, a\\xa0Quick\\xa0Repair\\xa0Contract\\xa0is\\xa0worth\\xa0{3}, and a\\xa0Token\\xa0is\\xa0worth\\xa0{4}.',\r\n                tDollContractLabel: 'T-Doll Contract',\r\n                equipmentContractLabel: 'Equipment Contract',\r\n                quickProductionContractLabel: 'Quick Production Contract',\r\n                quickRepairContractLabel: 'Quick Repair Contract',\r\n                tokenLabel: 'Token'\r\n            },\r\n            results: {\r\n                headers: {\r\n                    mission: 'Mission',\r\n                    runs: 'Runs',\r\n                    manpower: 'Manpower',\r\n                    ammunition: 'Ammunition',\r\n                    ration: 'Ration',\r\n                    parts: 'Parts',\r\n                    tDollContract: 'T-Doll Contract',\r\n                    equipmentContract: 'Equipment Contract',\r\n                    quickProductionContract: 'Quick Production Contract',\r\n                    quickRepairContract: 'Quick Repair Contract',\r\n                    token: 'Token',\r\n                    value: 'Value'\r\n                }\r\n            }\r\n        }\r\n    });\r\n","import {strings} from './localization';\r\n\r\nexport const defaults = {\r\n    activeStep: 0,\r\n\r\n    checkFrequency: 1,\r\n    runTime: 4,\r\n    unlockedChapters: [0, 10],\r\n\r\n    manpowerWeight: 1,\r\n    ammunitionWeight: 1,\r\n    rationWeight: 1,\r\n    partsWeight: 1,\r\n\r\n    tDollContractWeight: 100,\r\n    equipmentContractWeight: 100,\r\n    quickProductionContractWeight: 100,\r\n    quickRepairContractWeight: 100,\r\n    tokenWeight: 100,\r\n\r\n    resultsOrder: 'desc',\r\n    resultsOrderBy: strings.results.headers.value\r\n};\r\n","import {makeStyles} from '@material-ui/core';\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: '80em',\r\n        maxWidth: '100%',\r\n        margin: '0 auto',\r\n        fontSize: '0.875rem',\r\n        fontWeight: '400',\r\n        fontFamily: \"'Roboto', sans-serif;\"\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        float: 'right'\r\n    },\r\n    answer: {\r\n        position: 'absolute',\r\n        color: 'rgba(0, 0, 0, 0.71)',\r\n        fontWeight: '500'\r\n    },\r\n    importantContent: {\r\n        fontWeight: '500'\r\n    },\r\n    importantAnswer: {\r\n        fontWeight: '700',\r\n        color: 'rgba(0, 0, 0, 0.89)'\r\n    },\r\n    slider: {\r\n        width: '100%'\r\n    },\r\n    sliderLabel: {\r\n        width: '8em',\r\n        minWidth: '5em',\r\n        textAlign: 'right'\r\n    },\r\n    sliderDescription: {\r\n        marginBottom: '1.5em'\r\n    },\r\n    stepLabel: {\r\n        textAlign: 'left'\r\n    },\r\n    labelledSlider: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        height: '5em',\r\n        '& $slider': {\r\n            marginLeft: '1em',\r\n            top: '0.125em'\r\n        }\r\n    },\r\n    title: {\r\n        width: '100%',\r\n        textAlign: 'center',\r\n        fontSize: '3.5em',\r\n        fontWeight: '500'\r\n    },\r\n    stepper: {\r\n        marginBottom: '4em'\r\n    }\r\n}));\r\n","import missions from './res/missions.json';\r\n\r\nexport const calculate = configuration => {\r\n    const secondsInAHour = 3600;\r\n    const percentMultiplier = 0.01;\r\n\r\n    const effectiveTime = time => Math.max(time, configuration.checkFrequency * secondsInAHour);\r\n    const getRuns = time => Math.max(1, Math.floor(configuration.runTime * secondsInAHour / effectiveTime(time)));\r\n\r\n    const mapValue = mission => ({\r\n        chapter: mission.chapter,\r\n        mission: mission.mission,\r\n        runs: getRuns(mission.time),\r\n        rewards: mission.rewards,\r\n        value: (mission.rewards.resources.manpower * configuration.manpower +\r\n                mission.rewards.resources.ammunition * configuration.ammunition +\r\n                mission.rewards.resources.ration * configuration.ration +\r\n                mission.rewards.resources.parts * configuration.parts +\r\n                mission.rewards.items.tDollContract * percentMultiplier * configuration.tDollContract +\r\n                mission.rewards.items.equipmentContract * percentMultiplier * configuration.equipmentContract +\r\n                mission.rewards.items.quickProductionContract * percentMultiplier * configuration.quickProductionContract +\r\n                mission.rewards.items.quickRepairContract * percentMultiplier * configuration.quickRepairContract +\r\n                mission.rewards.items.token * percentMultiplier * configuration.token)\r\n               * getRuns(mission.time)\r\n    });\r\n\r\n    return missions.flatMap(missions => missions.missions.map(mission => ({...mission, chapter: missions.chapter})))\r\n                   .filter(mission => mission.time <= configuration.runTime * secondsInAHour)\r\n                   .filter(mission => mission.chapter >= configuration.unlockedChapters[0])\r\n                   .filter(mission => mission.chapter <= configuration.unlockedChapters[1])\r\n                   .map(mission => mapValue(mission));\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Logistics from './logistics';\r\n\r\nReactDOM.render(<Logistics />, document.querySelector('#root'));\r\n","import React from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Step from '@material-ui/core/Step';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport StepButton from '@material-ui/core/StepButton';\r\nimport StepContent from '@material-ui/core/StepContent';\r\nimport {StepLabel} from '@material-ui/core';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\n\r\nimport {defaults} from './settings';\r\nimport {useStyles} from './style';\r\nimport {strings} from './localization';\r\nimport {calculate} from \"./calculator\";\r\n\r\n\r\nexport default function LogisticsCalculator() {\r\n    const classes = useStyles();\r\n\r\n    const [activeStep, setActiveStep] = React.useState(defaults.activeStep);\r\n\r\n    const [checkFrequency, setCheckFrequency] = React.useState(defaults.checkFrequency);\r\n    const [runTime, setRunTime] = React.useState(defaults.runTime);\r\n    const [unlockedChapters, setUnlockedChapters] = React.useState(defaults.unlockedChapters);\r\n\r\n    const [manpowerWeight, setManpowerWeight] = React.useState(defaults.manpowerWeight);\r\n    const [ammunitionWeight, setAmmunitionWeight] = React.useState(defaults.ammunitionWeight);\r\n    const [rationWeight, setRationWeight] = React.useState(defaults.rationWeight);\r\n    const [partsWeight, setPartsWeight] = React.useState(defaults.partsWeight);\r\n\r\n    const [tDollContractWeight, setTDollContractWeight] = React.useState(defaults.tDollContractWeight);\r\n    const [equipmentContractWeight, setEquipmentContractWeight] = React.useState(defaults.equipmentContractWeight);\r\n    const [quickProductionContractWeight, setQuickProductionContractWeight] = React.useState(defaults.quickProductionContractWeight);\r\n    const [quickRepairContractWeight, setQuickRepairContractWeight] = React.useState(defaults.quickRepairContractWeight);\r\n    const [tokenWeight, setTokenWeight] = React.useState(defaults.tokenWeight);\r\n\r\n    const [resultsOrder, setResultsOrder] = React.useState(defaults.resultsOrder);\r\n    const [resultsOrderBy, setResultsOrderBy] = React.useState(defaults.resultsOrderBy);\r\n\r\n    const resources = [\r\n        {label: strings.resourceWeights.manpowerLabel, weight: manpowerWeight, weightSetter: setManpowerWeight},\r\n        {label: strings.resourceWeights.ammunitionLabel, weight: ammunitionWeight, weightSetter: setAmmunitionWeight},\r\n        {label: strings.resourceWeights.rationLabel, weight: rationWeight, weightSetter: setRationWeight},\r\n        {label: strings.resourceWeights.partsLabel, weight: partsWeight, weightSetter: setPartsWeight}\r\n    ];\r\n\r\n    const items = [\r\n        {label: strings.itemWeights.tDollContractLabel, weight: tDollContractWeight, weightSetter: setTDollContractWeight},\r\n        {label: strings.itemWeights.equipmentContractLabel, weight: equipmentContractWeight, weightSetter: setEquipmentContractWeight},\r\n        {label: strings.itemWeights.quickProductionContractLabel, weight: quickProductionContractWeight, weightSetter: setQuickProductionContractWeight},\r\n        {label: strings.itemWeights.quickRepairContractLabel, weight: quickRepairContractWeight, weightSetter: setQuickRepairContractWeight},\r\n        {label: strings.itemWeights.tokenLabel, weight: tokenWeight, weightSetter: setTokenWeight}\r\n    ];\r\n\r\n    const spanImportantContent = content => <span className={classes.importantContent}>{content}</span>;\r\n    const spanImportantAnswer = answer => <span className={classes.importantAnswer}>{answer}</span>;\r\n\r\n    const steps = [\r\n        {\r\n            question: strings.checkFrequency.question,\r\n            answer: () => strings.formatString(0 === checkFrequency ? strings.checkFrequency.answerConstantly : 1 === checkFrequency ? strings.checkFrequency.answerSingular : strings.checkFrequency.answerPlural, spanImportantAnswer(0 === checkFrequency ? strings.checkFrequency.answerConstantlyValue : checkFrequency)),\r\n            longAnswer: () => strings.formatString(0 === checkFrequency ? strings.checkFrequency.longAnswerConstantly : 1 === checkFrequency ? strings.checkFrequency.longAnswerSingular : strings.checkFrequency.longAnswerPlural, spanImportantContent(0 === checkFrequency ? strings.checkFrequency.longAnswerConstantlyValue : checkFrequency)),\r\n            bigMargin: false,\r\n            sliders: [{\r\n                value: checkFrequency,\r\n                setValue: setCheckFrequency,\r\n                handleLabel: value => strings.formatString(0 === value ? strings.checkFrequency.handleLabelConstantly : 1 === value ? strings.checkFrequency.handleLabelSingular : strings.checkFrequency.handleLabelPlural, value),\r\n                valueLabel: value => strings.formatString(strings.checkFrequency.valueLabel, value),\r\n                label: null,\r\n                labelDisplay: 'auto',\r\n                bigMargin: false,\r\n                step: 1,\r\n                min: 0,\r\n                max: 24\r\n            }]\r\n        },\r\n        {\r\n            question: strings.runTime.question,\r\n            answer: () => strings.formatString(1 === runTime ? strings.runTime.answerSingular : strings.runTime.answerPlural, spanImportantAnswer(runTime)),\r\n            longAnswer: () => strings.formatString(1 === runTime ? strings.runTime.longAnswerSingular : strings.runTime.longAnswerPlural, spanImportantContent(runTime)),\r\n            bigMargin: false,\r\n            sliders: [{\r\n                value: runTime,\r\n                setValue: setRunTime,\r\n                handleLabel: value => strings.formatString(1 === value ? strings.runTime.handleLabelSingular : strings.runTime.handleLabelPlural, value),\r\n                valueLabel: value => strings.formatString(strings.runTime.valueLabel, value),\r\n                label: null,\r\n                labelDisplay: 'auto',\r\n                bigMargin: false,\r\n                step: 1,\r\n                min: 1,\r\n                max: 24\r\n            }]\r\n        },\r\n        {\r\n            question: strings.unlockedChapters.question,\r\n            answer: () => unlockedChapters[0] === unlockedChapters[1]\r\n                          ? strings.formatString(strings.unlockedChapters.answerSingular, spanImportantAnswer(strings.formatString(strings.unlockedChapters.single, unlockedChapters[0])))\r\n                          : strings.formatString(strings.unlockedChapters.answerPlural, spanImportantAnswer(strings.formatString(strings.unlockedChapters.range, unlockedChapters[0], unlockedChapters[1]))),\r\n            longAnswer: () => unlockedChapters[0] === unlockedChapters[1]\r\n                              ? strings.formatString(strings.unlockedChapters.longAnswerSingle, spanImportantContent(strings.formatString(strings.unlockedChapters.single, unlockedChapters[0])))\r\n                              : strings.formatString(strings.unlockedChapters.longAnswerRange, spanImportantContent(strings.formatString(strings.unlockedChapters.range, unlockedChapters[0], unlockedChapters[1]))),\r\n            bigMargin: false,\r\n            sliders: [{\r\n                value: unlockedChapters,\r\n                setValue: setUnlockedChapters,\r\n                handleLabel: value => strings.formatString(strings.unlockedChapters.handleLabel, value),\r\n                valueLabel: value => value,\r\n                label: null,\r\n                labelDisplay: 'auto',\r\n                bigMargin: false,\r\n                step: 1,\r\n                min: 0,\r\n                max: 10\r\n            }]\r\n        },\r\n        {\r\n            question: strings.resourceWeights.question,\r\n            answer: () => strings.formatString(strings.resourceWeights.answer,\r\n                                               spanImportantAnswer(strings.formatString(strings.resourceWeights.multiplier, manpowerWeight)),\r\n                                               spanImportantAnswer(strings.formatString(strings.resourceWeights.multiplier, ammunitionWeight)),\r\n                                               spanImportantAnswer(strings.formatString(strings.resourceWeights.multiplier, rationWeight)),\r\n                                               spanImportantAnswer(strings.formatString(strings.resourceWeights.multiplier, partsWeight))),\r\n            longAnswer: () => strings.formatString(strings.resourceWeights.longAnswer,\r\n                                                   ...resources.map(resource => spanImportantContent(strings.formatString(strings.resourceWeights.multiplier, resource.weight)))),\r\n            bigMargin: true,\r\n            sliders: resources.map(resource => ({\r\n                value: resource.weight,\r\n                setValue: resource.weightSetter,\r\n                handleLabel: value => strings.formatString(strings.resourceWeights.handleLabel, value),\r\n                valueLabel: value => strings.formatString(strings.resourceWeights.valueLabel, value),\r\n                label: resource.label,\r\n                bigMargin: true,\r\n                labelDisplay: 'on',\r\n                step: 1,\r\n                min: 0,\r\n                max: 10\r\n            }))\r\n        },\r\n        {\r\n            question: strings.itemWeights.question,\r\n            answer: () => strings.formatString(strings.itemWeights.answer,\r\n                                               spanImportantAnswer(strings.formatString(strings.itemWeights.multiplier, tDollContractWeight)),\r\n                                               spanImportantAnswer(strings.formatString(strings.itemWeights.multiplier, equipmentContractWeight)),\r\n                                               spanImportantAnswer(strings.formatString(strings.itemWeights.multiplier, quickProductionContractWeight)),\r\n                                               spanImportantAnswer(strings.formatString(strings.itemWeights.multiplier, quickRepairContractWeight)),\r\n                                               spanImportantAnswer(strings.formatString(strings.itemWeights.multiplier, tokenWeight))),\r\n            longAnswer: () => strings.formatString(strings.itemWeights.longAnswer,\r\n                                                   ...items.map(item => spanImportantContent(strings.formatString(strings.itemWeights.multiplier, item.weight)))),\r\n            bigMargin: true,\r\n            sliders: items.map(item => ({\r\n                value: item.weight,\r\n                setValue: item.weightSetter,\r\n                handleLabel: value => value,\r\n                valueLabel: value => value,\r\n                label: item.label,\r\n                bigMargin: true,\r\n                labelDisplay: 'on',\r\n                step: 50,\r\n                min: 0,\r\n                max: 1000\r\n            }))\r\n        }\r\n    ];\r\n\r\n    const handleReset = () => {\r\n        setActiveStep(defaults.activeStep);\r\n\r\n        setCheckFrequency(defaults.checkFrequency);\r\n        setRunTime(defaults.runTime);\r\n        setUnlockedChapters(defaults.unlockedChapters);\r\n\r\n        setManpowerWeight(defaults.manpowerWeight);\r\n        setAmmunitionWeight(defaults.ammunitionWeight);\r\n        setRationWeight(defaults.rationWeight);\r\n        setPartsWeight(defaults.partsWeight);\r\n\r\n        setTDollContractWeight(defaults.tDollContractWeight);\r\n        setEquipmentContractWeight(defaults.equipmentContractWeight);\r\n        setQuickProductionContractWeight(defaults.quickProductionContractWeight);\r\n        setQuickRepairContractWeight(defaults.quickRepairContractWeight);\r\n        setTokenWeight(defaults.tokenWeight);\r\n\r\n        setResultsOrder(defaults.resultsOrder);\r\n        setResultsOrderBy(defaults.resultsOrderBy);\r\n    };\r\n\r\n    const handleResultsSort = header => event => {\r\n        setResultsOrder(resultsOrderBy === header && resultsOrder === 'desc' ? 'asc' : 'desc');\r\n        setResultsOrderBy(header);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.title}>Girls' Frontline logistics calculator</div>\r\n            <Stepper className={classes.stepper} nonLinear orientation=\"vertical\" activeStep={activeStep}>\r\n                {steps.map((step, index) => (\r\n                    <Step key={step.question}>\r\n                        <StepButton onClick={() => setActiveStep(index)}>\r\n                            <StepLabel className={classes.stepLabel}>{step.question}{activeStep !== index ? (<div className={classes.answer}>{step.answer()}</div>) : null}</StepLabel>\r\n                        </StepButton>\r\n                        <StepContent>\r\n                            <div>\r\n                                <div className={step.bigMargin ? classes.sliderDescription : null}>{step.longAnswer()}</div>\r\n                                {step.sliders.map((slider, sliderKey) => (\r\n                                    <span key={sliderKey} className={slider.bigMargin ? classes.labelledSlider : null}>\r\n                                        {slider.label ? <span className={classes.sliderLabel}>{slider.label}</span> : null}\r\n                                        <Slider key={sliderKey} className={classes.slider}\r\n                                                defaultValue={slider.value}\r\n                                                onChange={(event, newValue) => slider.setValue(newValue)}\r\n                                                getAriaValueText={slider.handleLabel}\r\n                                                valueLabelDisplay={slider.labelDisplay}\r\n                                                step={slider.step}\r\n                                                marks\r\n                                                valueLabelFormat={slider.valueLabel}\r\n                                                min={slider.min}\r\n                                                max={slider.max}/>\r\n                                    </span>\r\n                                ))}\r\n                            </div>\r\n                        </StepContent>\r\n                    </Step>\r\n                ))}\r\n            </Stepper>\r\n\r\n            <TableContainer component={Paper}>\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>{strings.results.headers.mission}</TableCell>\r\n                            {[strings.results.headers.runs,\r\n                              strings.results.headers.manpower,\r\n                              strings.results.headers.ammunition,\r\n                              strings.results.headers.ration,\r\n                              strings.results.headers.parts,\r\n                              strings.results.headers.value].map(header => <TableCell key={header} align=\"right\" sortDirection={resultsOrderBy === header ? resultsOrder : false}>\r\n                                <TableSortLabel active={resultsOrderBy === header} direction={resultsOrderBy === header ? resultsOrder : 'desc'} onClick={handleResultsSort(header)}>{header}</TableSortLabel>\r\n                            </TableCell>)}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {calculate({\r\n                                       runTime: runTime,\r\n                                       checkFrequency: checkFrequency,\r\n                                       unlockedChapters: unlockedChapters,\r\n                                       manpower: manpowerWeight,\r\n                                       ammunition: ammunitionWeight,\r\n                                       ration: rationWeight,\r\n                                       parts: partsWeight,\r\n                                       tDollContract: tDollContractWeight,\r\n                                       equipmentContract: equipmentContractWeight,\r\n                                       quickProductionContract: quickProductionContractWeight,\r\n                                       quickRepairContract: quickRepairContractWeight,\r\n                                       token: tokenWeight\r\n                                   }\r\n                        ).sort((a, b) => {\r\n                            let comparison = 0;\r\n                            switch (resultsOrderBy) {\r\n                                case strings.results.headers.runs:\r\n                                    comparison = a.runs - b.runs;\r\n                                    break;\r\n                                case strings.results.headers.manpower:\r\n                                    comparison = a.rewards.resources.manpower - b.rewards.resources.manpower;\r\n                                    break;\r\n                                case strings.results.headers.ammunition:\r\n                                    comparison = a.rewards.resources.ammunition - b.rewards.resources.ammunition;\r\n                                    break;\r\n                                case strings.results.headers.ration:\r\n                                    comparison = a.rewards.resources.ration - b.rewards.resources.ration;\r\n                                    break;\r\n                                case strings.results.headers.parts:\r\n                                    comparison = a.rewards.resources.parts - b.rewards.resources.parts;\r\n                                    break;\r\n                                case strings.results.headers.value:\r\n                                default:\r\n                                    comparison = a.value - b.value;\r\n                            }\r\n                            return 'asc' === resultsOrder ? comparison : -1 * comparison;\r\n                        }).map(mission => (\r\n                            <TableRow key={mission.chapter + '-' + mission.mission}>\r\n                                <TableCell component=\"th\" scope=\"row\">{mission.chapter}-{mission.mission}</TableCell>\r\n                                <TableCell align=\"right\">{mission.runs}</TableCell>\r\n                                <TableCell align=\"right\">{mission.rewards.resources.manpower * mission.runs}</TableCell>\r\n                                <TableCell align=\"right\">{mission.rewards.resources.ammunition * mission.runs}</TableCell>\r\n                                <TableCell align=\"right\">{mission.rewards.resources.ration * mission.runs}</TableCell>\r\n                                <TableCell align=\"right\">{mission.rewards.resources.parts * mission.runs}</TableCell>\r\n                                <TableCell align=\"right\">{mission.value}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            <Button className={classes.button} onClick={handleReset} color=\"secondary\">Reset</Button>\r\n        </div>\r\n    );\r\n}\r\n"],"sourceRoot":""}