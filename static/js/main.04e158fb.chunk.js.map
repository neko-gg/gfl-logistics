{"version":3,"sources":["localization.js","settings.js","style.js","component/GflDialogContent.js","component/GflDialog.js","calculator.js","component/GflResults.js","component/GflDrawer.js","component/GflAppBar.js","component/GflJoyride.js","index.js","logistics.js"],"names":["strings","LocalizedStrings","en","drawer","time","chapters","resources","items","tutorial","about","joyride","back","close","last","next","skip","steps","title","content","checkFrequency","question","answerConstantlyValue","answerConstantly","answerSingular","answerPlural","valueLabel","handleLabelConstantly","handleLabelSingular","handleLabelPlural","runTime","unlockedChapters","single","range","answerSingle","answerRange","handleLabel","resourceWeights","multiplier","answer","manpower","ammunition","ration","parts","itemWeights","tDollContract","equipmentContract","quickProductionContract","quickRepairContract","token","results","headers","mission","runs","value","defaults","joyrideState","joyrideStep","joyrideHelper","undefined","drawerState","dialogState","open","selected","manpowerWeight","ammunitionWeight","rationWeight","partsWeight","tDollContractWeight","equipmentContractWeight","quickProductionContractWeight","quickRepairContractWeight","tokenWeight","resultsOrder","resultsOrderBy","useStyles","makeStyles","theme","root","width","maxWidth","margin","fontSize","fontWeight","fontFamily","backgroundColor","palette","primary","main","color","text","secondary","menuButton","marginRight","spacing","flexGrow","lineHeight","letterSpacing","drawerList","dialogContent","padding","dialogPaper","marginBottom","button","marginTop","float","importantContent","slider","GflDialogContent","this","props","Paper","className","classes","formatString","spanImportantContent","Slider","defaultValue","onChange","event","newValue","setCheckFrequency","getAriaValueText","valueLabelFormat","valueLabelDisplay","step","min","max","setRunTime","setUnlockedChapters","map","resource","key","name","weight","weightSetter","item","React","Component","GflDialog","Dialog","onClose","setDialogState","DialogTitle","DialogContent","dividers","DialogActions","Button","onClick","calculate","configuration","getRuns","Math","floor","effectiveTime","missions","flatMap","chapter","filter","rewards","mapValue","GflResults","calculateResults","sortResults","a","b","comparison","handleResultsSort","header","setResultsOrder","setResultsOrderBy","getHeaderCell","TableCell","align","sortDirection","TableSortLabel","active","direction","getResultRow","TableRow","component","scope","TableContainer","Table","TableHead","TableBody","sort","GflDrawer","drawerItems","getListItem","ListItem","ListItemText","state","snapshot","info","index","checkElement","selector","document","querySelector","Promise","requestAnimationFrame","then","resolve","Array","from","getElementsByClassName","forEach","fakeDrawerList","remove","boundingClientRect","getBoundingClientRect","createElement","style","pointerEvents","position","left","top","height","classList","add","body","appendChild","joyrideToDrawer","SwipeableDrawer","setDrawerState","onOpen","role","List","Divider","resetJoyride","GflAppBar","Toolbar","IconButton","edge","aria-label","GflJoyride","handleJoyrideCallback","data","lifecycle","status","action","type","closeActions","ACTIONS","STOP","CLOSE","SKIP","finishedStatuses","STATUS","FINISHED","SKIPPED","EVENTS","STEP_AFTER","TARGET_NOT_FOUND","includes","LIFECYCLE","COMPLETE","NEXT","PREV","setJoyrideStep","setJoyrideState","window","scrollTo","behavior","joyrideSteps","placement","target","disableBeacon","spotlightClicks","getHelpers","continuous","scrollToFirstStep","showProgress","showSkipButton","disableOverlayClose","styles","options","zIndex","locale","run","stepIndex","callback","ReactDOM","render","useState","setJoyrideHelper","setManpowerWeight","setAmmunitionWeight","setRationWeight","setPartsWeight","setTDollContractWeight","setEquipmentContractWeight","setQuickProductionContractWeight","setQuickRepairContractWeight","setTokenWeight"],"mappings":"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","file":"static/js/main.04e158fb.chunk.js","sourcesContent":["import LocalizedStrings from 'react-localization';\r\n\r\nexport const strings = new LocalizedStrings(\r\n    {\r\n        en: {\r\n            drawer: {\r\n                time: 'Time',\r\n                chapters: 'Chapters',\r\n                resources: 'Resources',\r\n                items: 'Items',\r\n                tutorial: 'Tutorial',\r\n                about: 'About'\r\n            },\r\n            joyride: {\r\n                back: 'Back',\r\n                close: 'Close',\r\n                last: 'End',\r\n                next: 'Next',\r\n                skip: 'Skip',\r\n                steps: [\r\n                    {\r\n                        title: \"Welcome, Shikikan!\",\r\n                        content: \"This web app helps you choose the best logistic support missions to run.\"\r\n                    },\r\n                    {\r\n                        title: \"Menu\",\r\n                        content: \"Click the menu icon to choose your preferred settings.\"\r\n                    },\r\n                    {\r\n                        title: \"Settings\",\r\n                        content: \"Here you can customize the various aspects of logistics: how long do you want to run them for, how often can you check you phone, etc...\"\r\n                    },\r\n                    {\r\n                        title: \"Results\",\r\n                        content: \"Logistics support missions will appear here: their value is calculated based on the settings you chose. Feel free to sort this table however you see fit. Good bye!\"\r\n                    }\r\n                ]\r\n            },\r\n            checkFrequency: {\r\n                question: 'How often can you check your phone?',\r\n                answerConstantlyValue: 'constantly',\r\n                answerConstantly: 'I can check my phone {0}.',\r\n                answerSingular: 'I can check my phone every {0} hour.',\r\n                answerPlural: 'I can check my phone every {0} hours.',\r\n                valueLabel: '{0}h',\r\n                handleLabelConstantly: 'Constantly',\r\n                handleLabelSingular: '{0} hour',\r\n                handleLabelPlural: '{0} hours'\r\n            },\r\n            runTime: {\r\n                question: 'How long do you want to run logistics for?',\r\n                answerSingular: 'I want to run logistics for {0} hour.',\r\n                answerPlural: 'I want to run logistics for {0} hours.',\r\n                valueLabel: '{0}h',\r\n                handleLabelSingular: '{0} hour',\r\n                handleLabelPlural: '{0} hours'\r\n            },\r\n            unlockedChapters: {\r\n                question: 'Which chapters have you unlocked?',\r\n                single: '{0}',\r\n                range: '{0}-{1}',\r\n                answerSingle: 'I have unlocked chapter {0}.',\r\n                answerRange: 'I have unlocked chapters {0}.',\r\n                handleLabel: 'Chapter {0}'\r\n            },\r\n            resourceWeights: {\r\n                question: 'How much do you care about each resource?',\r\n                multiplier: '{0}x',\r\n                answer: 'I care {0} about {1}.',\r\n                handleLabel: '{0}x',\r\n                valueLabel: '{0}x',\r\n                manpower: 'manpower',\r\n                ammunition: 'ammunition',\r\n                ration: 'ration',\r\n                parts: 'parts'\r\n            },\r\n            itemWeights: {\r\n                question: 'How much is each item worth to you?',\r\n                multiplier: '{0}',\r\n                answer: 'To me, {1} is worth {0}.',\r\n                tDollContract: 'T-Doll Contract',\r\n                equipmentContract: 'Equipment Contract',\r\n                quickProductionContract: 'Quick Production Contract',\r\n                quickRepairContract: 'Quick Repair Contract',\r\n                token: 'Token'\r\n            },\r\n            results: {\r\n                headers: {\r\n                    mission: 'Mission',\r\n                    runs: 'Runs',\r\n                    manpower: 'Manpower',\r\n                    ammunition: 'Ammunition',\r\n                    ration: 'Ration',\r\n                    parts: 'Parts',\r\n                    tDollContract: 'T-Doll Contract',\r\n                    equipmentContract: 'Equipment Contract',\r\n                    quickProductionContract: 'Quick Production Contract',\r\n                    quickRepairContract: 'Quick Repair Contract',\r\n                    token: 'Token',\r\n                    value: 'Value'\r\n                }\r\n            }\r\n        }\r\n    });\r\n","import {strings} from './localization';\r\n\r\nexport const defaults = {\r\n    joyrideState: true,\r\n    joyrideStep: 0,\r\n    joyrideHelper: undefined,\r\n\r\n    drawerState: false,\r\n    dialogState: {open: false, selected: strings.drawer.time},\r\n\r\n    checkFrequency: 1,\r\n    runTime: 4,\r\n    unlockedChapters: [0, 10],\r\n\r\n    manpowerWeight: 1,\r\n    ammunitionWeight: 1,\r\n    rationWeight: 1,\r\n    partsWeight: 1,\r\n\r\n    tDollContractWeight: 100,\r\n    equipmentContractWeight: 100,\r\n    quickProductionContractWeight: 100,\r\n    quickRepairContractWeight: 100,\r\n    tokenWeight: 100,\r\n\r\n    resultsOrder: 'desc',\r\n    resultsOrderBy: strings.results.headers.value\r\n};\r\n","import {makeStyles} from '@material-ui/core';\r\n\r\nconst fontStyle = () => ({\r\n    fontSize: '0.875rem',\r\n    fontWeight: '400',\r\n    fontFamily: \"'Roboto', sans-serif;\"\r\n});\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: '80em',\r\n        maxWidth: '100%',\r\n        margin: '0 auto',\r\n        ...fontStyle()\r\n    },\r\n    \"@global\": {\r\n        \"[id^=react-joyride-step-]\": {\r\n            ...fontStyle(),\r\n            \"& button\": {\r\n                ...fontStyle(),\r\n                \"&[data-action=primary]\": {\r\n                    backgroundColor: theme.palette.primary.main + ' !important'\r\n                },\r\n                \"&[data-action=back]\": {\r\n                    color: theme.palette.text.primary + ' !important'\r\n                },\r\n                \"&[data-action=skip]\": {\r\n                    color: theme.palette.secondary.main + ' !important'\r\n                }\r\n            }\r\n        }\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        fontSize: '1.1rem',\r\n        fontWeight: '500',\r\n        lineHeight: '1.6',\r\n        letterSpacing: '0.0075em'\r\n    },\r\n    drawerList: {\r\n        width: '15em',\r\n        maxWidth: '80vw'\r\n    },\r\n    dialogContent: {\r\n        maxWidth: '70vw',\r\n        width: '50em',\r\n        padding: theme.spacing(2)\r\n    },\r\n    dialogPaper: {\r\n        padding: theme.spacing(2),\r\n        '&:not(:last-of-type)': {\r\n            marginBottom: theme.spacing(2)\r\n        }\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        float: 'right'\r\n    },\r\n    importantContent: {\r\n        fontWeight: '500'\r\n    },\r\n    slider: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    results: {\r\n        width: '100%'\r\n    }\r\n}));\r\n","import React from 'react';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nimport {strings} from '../localization';\r\n\r\nexport default class GflDialogContent extends React.Component {\r\n\r\n    render() {\r\n        switch (this.props.dialogState.selected) {\r\n            case strings.drawer.time:\r\n                return (\r\n                    <span>\r\n                        <Paper className={this.props.classes.dialogPaper}>\r\n                            <div>{strings.formatString(0 === this.props.checkFrequency ? strings.checkFrequency.answerConstantly : 1 === this.props.checkFrequency ? strings.checkFrequency.answerSingular : strings.checkFrequency.answerPlural, this.props.spanImportantContent(0 === this.props.checkFrequency ? strings.checkFrequency.answerConstantlyValue : this.props.checkFrequency))}</div>\r\n                            <Slider className={this.props.classes.slider}\r\n                                    defaultValue={this.props.checkFrequency}\r\n                                    onChange={(event, newValue) => this.props.setCheckFrequency(newValue)}\r\n                                    getAriaValueText={value => strings.formatString(0 === value ? strings.checkFrequency.handleLabelConstantly : 1 === value ? strings.checkFrequency.handleLabelSingular : strings.checkFrequency.handleLabelPlural, value)}\r\n                                    valueLabelFormat={value => strings.formatString(strings.checkFrequency.valueLabel, value)}\r\n                                    valueLabelDisplay=\"off\"\r\n                                    step={1}\r\n                                    min={0}\r\n                                    max={24}/>\r\n                        </Paper>\r\n                        <Paper className={this.props.classes.dialogPaper}>\r\n                            <div>{strings.formatString(1 === this.props.runTime ? strings.runTime.answerSingular : strings.runTime.answerPlural, this.props.spanImportantContent(this.props.runTime))}</div>\r\n                            <Slider className={this.props.classes.slider}\r\n                                    defaultValue={this.props.runTime}\r\n                                    onChange={(event, newValue) => this.props.setRunTime(newValue)}\r\n                                    getAriaValueText={value => strings.formatString(1 === value ? strings.runTime.handleLabelSingular : strings.runTime.handleLabelPlural, value)}\r\n                                    valueLabelFormat={value => strings.formatString(strings.runTime.valueLabel, value)}\r\n                                    valueLabelDisplay=\"off\"\r\n                                    step={1}\r\n                                    min={1}\r\n                                    max={24}/>\r\n                        </Paper>\r\n                    </span>);\r\n            case strings.drawer.chapters:\r\n                return (\r\n                    <span>\r\n                        <Paper className={this.props.classes.dialogPaper}>\r\n                            <div>{this.props.unlockedChapters[0] === this.props.unlockedChapters[1]\r\n                                  ? strings.formatString(strings.unlockedChapters.answerSingle, this.props.spanImportantContent(strings.formatString(strings.unlockedChapters.single, this.props.unlockedChapters[0])))\r\n                                  : strings.formatString(strings.unlockedChapters.answerRange, this.props.spanImportantContent(strings.formatString(strings.unlockedChapters.range, this.props.unlockedChapters[0], this.props.unlockedChapters[1])))}</div>\r\n                            <Slider className={this.props.classes.slider}\r\n                                    defaultValue={this.props.unlockedChapters}\r\n                                    onChange={(event, newValue) => this.props.setUnlockedChapters(newValue)}\r\n                                    getAriaValueText={value => strings.formatString(strings.unlockedChapters.handleLabel, value)}\r\n                                    valueLabelDisplay=\"off\"\r\n                                    step={1}\r\n                                    min={0}\r\n                                    max={10}/>\r\n                        </Paper>\r\n                    </span>);\r\n            case strings.drawer.resources:\r\n                return (\r\n                    <span>{this.props.resources.map(resource => (\r\n                        <Paper key={resource.name} className={this.props.classes.dialogPaper}>\r\n                            <div>{strings.formatString(strings.resourceWeights.answer, this.props.spanImportantContent(strings.formatString(strings.resourceWeights.multiplier, resource.weight)), this.props.spanImportantContent(resource.name))}</div>\r\n                            <Slider className={this.props.classes.slider}\r\n                                    defaultValue={resource.weight}\r\n                                    onChange={(event, newValue) => resource.weightSetter(newValue)}\r\n                                    getAriaValueText={value => strings.formatString(strings.resourceWeights.handleLabel, value)}\r\n                                    valueLabelFormat={value => strings.formatString(strings.resourceWeights.valueLabel, value)}\r\n                                    valueLabelDisplay=\"off\"\r\n                                    step={1}\r\n                                    min={0}\r\n                                    max={10}/>\r\n                        </Paper>))}\r\n                    </span>);\r\n            case strings.drawer.items:\r\n                return (\r\n                    <span>{this.props.items.map(item => (\r\n                        <Paper key={item.name} className={this.props.classes.dialogPaper}>\r\n                            <div>{strings.formatString(strings.itemWeights.answer, this.props.spanImportantContent(strings.formatString(strings.itemWeights.multiplier, item.weight)), this.props.spanImportantContent(item.name))}</div>\r\n                            <Slider className={this.props.classes.slider}\r\n                                    defaultValue={item.weight}\r\n                                    onChange={(event, newValue) => item.weightSetter(newValue)}\r\n                                    getAriaValueText={value => strings.formatString(strings.itemWeights.handleLabel, value)}\r\n                                    valueLabelFormat={value => strings.formatString(strings.itemWeights.valueLabel, value)}\r\n                                    valueLabelDisplay=\"off\"\r\n                                    step={50}\r\n                                    min={0}\r\n                                    max={1000}/>\r\n                        </Paper>))}\r\n                    </span>);\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nimport GflDialogContent from './GflDialogContent';\r\n\r\nexport default class GflDialog extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Dialog maxWidth={false}\r\n                    open={this.props.dialogState.open}\r\n                    onClose={() => this.props.setDialogState({open: false})}>\r\n                <DialogTitle>{this.props.dialogState.selected || \"\"}</DialogTitle>\r\n                <DialogContent dividers className={this.props.classes.dialogContent}>\r\n                    <div className={this.props.classes.root}>\r\n                        <GflDialogContent classes={this.props.classes}\r\n                                          spanImportantContent={this.props.spanImportantContent}\r\n                                          dialogState={this.props.dialogState}\r\n                                          checkFrequency={this.props.checkFrequency}\r\n                                          setCheckFrequency={this.props.setCheckFrequency}\r\n                                          runTime={this.props.runTime}\r\n                                          setRunTime={this.props.setRunTime}\r\n                                          unlockedChapters={this.props.unlockedChapters}\r\n                                          setUnlockedChapters={this.props.setUnlockedChapters}\r\n                                          resources={this.props.resources}\r\n                                          items={this.props.items}/>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => this.props.setDialogState({open: false})} color=\"primary\">Ok</Button>\r\n                </DialogActions>\r\n            </Dialog>);\r\n    }\r\n\r\n}\r\n","import missions from './res/missions.json';\r\n\r\nexport const calculate = configuration => {\r\n    const secondsInAHour = 3600;\r\n    const percentMultiplier = 0.01;\r\n\r\n    const effectiveTime = time => Math.max(time, configuration.checkFrequency * secondsInAHour);\r\n    const getRuns = time => Math.max(1, Math.floor(configuration.runTime * secondsInAHour / effectiveTime(time)));\r\n\r\n    const mapValue = (mission, runs) => ({\r\n        chapter: mission.chapter,\r\n        mission: mission.mission,\r\n        runs: runs,\r\n        rewards: {\r\n            resources: {\r\n                manpower: mission.rewards.resources.manpower * runs,\r\n                ammunition: mission.rewards.resources.ammunition * runs,\r\n                ration: mission.rewards.resources.ration * runs,\r\n                parts: mission.rewards.resources.parts * runs\r\n            },\r\n            items: {\r\n                tDollContract: mission.rewards.items.tDollContract * runs,\r\n                equipmentContract: mission.rewards.items.equipmentContract * runs,\r\n                quickProductionContract: mission.rewards.items.quickProductionContract * runs,\r\n                quickRepairContract: mission.rewards.items.quickRepairContract * runs,\r\n                token: mission.rewards.items.token * runs\r\n            }\r\n        },\r\n        value: (mission.rewards.resources.manpower * configuration.manpower +\r\n                mission.rewards.resources.ammunition * configuration.ammunition +\r\n                mission.rewards.resources.ration * configuration.ration +\r\n                mission.rewards.resources.parts * configuration.parts +\r\n                mission.rewards.items.tDollContract * percentMultiplier * configuration.tDollContract +\r\n                mission.rewards.items.equipmentContract * percentMultiplier * configuration.equipmentContract +\r\n                mission.rewards.items.quickProductionContract * percentMultiplier * configuration.quickProductionContract +\r\n                mission.rewards.items.quickRepairContract * percentMultiplier * configuration.quickRepairContract +\r\n                mission.rewards.items.token * percentMultiplier * configuration.token)\r\n               * runs\r\n    });\r\n\r\n    return missions.flatMap(missions => missions.missions.map(mission => ({...mission, chapter: missions.chapter})))\r\n                   .filter(mission => mission.time <= configuration.runTime * secondsInAHour)\r\n                   .filter(mission => mission.chapter >= configuration.unlockedChapters[0])\r\n                   .filter(mission => mission.chapter <= configuration.unlockedChapters[1])\r\n                   .map(mission => mapValue(mission, getRuns(mission.time)));\r\n};\r\n","import React from 'react';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\n\r\nimport {strings} from '../localization';\r\nimport {calculate} from '../calculator';\r\n\r\nexport default class GflResults extends React.Component {\r\n\r\n    headers = () => [strings.results.headers.runs,\r\n                     strings.results.headers.manpower,\r\n                     strings.results.headers.ammunition,\r\n                     strings.results.headers.ration,\r\n                     strings.results.headers.parts,\r\n                     strings.results.headers.value];\r\n\r\n    calculateResults = () => calculate({\r\n                                           runTime: this.props.runTime,\r\n                                           checkFrequency: this.props.checkFrequency,\r\n                                           unlockedChapters: this.props.unlockedChapters,\r\n                                           manpower: this.props.manpower,\r\n                                           ammunition: this.props.ammunition,\r\n                                           ration: this.props.ration,\r\n                                           parts: this.props.parts,\r\n                                           tDollContract: this.props.tDollContract,\r\n                                           equipmentContract: this.props.equipmentContract,\r\n                                           quickProductionContract: this.props.quickProductionContract,\r\n                                           quickRepairContract: this.props.quickRepairContract,\r\n                                           token: this.props.token\r\n                                       }\r\n    );\r\n\r\n    sortResults = () => (a, b) => {\r\n        let comparison = 0;\r\n        switch (this.props.resultsOrderBy) {\r\n            case strings.results.headers.runs:\r\n                comparison = a.runs - b.runs;\r\n                break;\r\n            case strings.results.headers.manpower:\r\n                comparison = a.rewards.resources.manpower - b.rewards.resources.manpower;\r\n                break;\r\n            case strings.results.headers.ammunition:\r\n                comparison = a.rewards.resources.ammunition - b.rewards.resources.ammunition;\r\n                break;\r\n            case strings.results.headers.ration:\r\n                comparison = a.rewards.resources.ration - b.rewards.resources.ration;\r\n                break;\r\n            case strings.results.headers.parts:\r\n                comparison = a.rewards.resources.parts - b.rewards.resources.parts;\r\n                break;\r\n            case strings.results.headers.value:\r\n            default:\r\n                comparison = a.value - b.value;\r\n        }\r\n        return 'asc' === this.props.resultsOrder ? comparison : -1 * comparison;\r\n    };\r\n\r\n    handleResultsSort = header => () => {\r\n        this.props.setResultsOrder(this.props.resultsOrderBy === header && this.props.resultsOrder === 'desc' ? 'asc' : 'desc');\r\n        this.props.setResultsOrderBy(header);\r\n    };\r\n\r\n    getHeaderCell = () => header =>\r\n        <TableCell key={header}\r\n                   align=\"right\"\r\n                   sortDirection={this.props.resultsOrderBy === header ? this.props.resultsOrder : false}>\r\n            <TableSortLabel active={this.props.resultsOrderBy === header}\r\n                            direction={this.props.resultsOrderBy === header ? this.props.resultsOrder : 'desc'}\r\n                            onClick={this.handleResultsSort(header)}>\r\n                {header}\r\n            </TableSortLabel>\r\n        </TableCell>;\r\n\r\n    getResultRow = () => mission => (\r\n        <TableRow key={mission.chapter + '-' + mission.mission}>\r\n            <TableCell component=\"th\" scope=\"row\">{mission.chapter}-{mission.mission}</TableCell>\r\n            <TableCell align=\"right\">{mission.runs}</TableCell>\r\n            <TableCell align=\"right\">{mission.rewards.resources.manpower}</TableCell>\r\n            <TableCell align=\"right\">{mission.rewards.resources.ammunition}</TableCell>\r\n            <TableCell align=\"right\">{mission.rewards.resources.ration}</TableCell>\r\n            <TableCell align=\"right\">{mission.rewards.resources.parts}</TableCell>\r\n            <TableCell align=\"right\">{mission.value}</TableCell>\r\n        </TableRow>\r\n    );\r\n\r\n    render() {\r\n        return (\r\n            <TableContainer\r\n                className={this.props.classes.results}\r\n                component={Paper}>\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>{strings.results.headers.mission}</TableCell>\r\n                            {this.headers()\r\n                                 .map(this.getHeaderCell())}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {this.calculateResults()\r\n                             .sort(this.sortResults())\r\n                             .map(this.getResultRow())}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>);\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport {strings} from '../localization';\r\n\r\nconst checkElement = selector => null == document.querySelector(selector)\r\n                                 ? new Promise(requestAnimationFrame).then(() => checkElement(selector))\r\n                                 : Promise.resolve(true);\r\n\r\nexport const fakeDrawerClassName = () => 'fake-drawer-list';\r\n\r\nexport default class GflDrawer extends React.Component {\r\n\r\n    drawerItems = () => [strings.drawer.time,\r\n                         strings.drawer.chapters,\r\n                         strings.drawer.resources,\r\n                         strings.drawer.items];\r\n\r\n    getListItem = () => (text) => (\r\n        <ListItem button key={text} onClick={() => this.props.setDialogState({open: true, selected: text})}>\r\n            <ListItemText primary={text}/>\r\n        </ListItem>\r\n    );\r\n\r\n    componentDidUpdate(props, state, snapshot) {\r\n        if (this.props.drawerState\r\n            && this.props.joyrideState\r\n            && this.props.joyrideHelper\r\n            && this.props.joyrideHelper.info()\r\n            && 1 === this.props.joyrideHelper.info().index) {\r\n            checkElement(`.${this.props.classes.drawerList}`).then(() => {\r\n                Array.from(document.getElementsByClassName(fakeDrawerClassName()))\r\n                     .forEach(fakeDrawerList => fakeDrawerList.remove());\r\n\r\n                const boundingClientRect = document.getElementsByClassName(this.props.classes.drawerList)[0].getBoundingClientRect();\r\n                const fakeDrawerList = document.createElement(\"div\");\r\n\r\n                fakeDrawerList.style.pointerEvents = 'none';\r\n                fakeDrawerList.style.position = 'absolute';\r\n                fakeDrawerList.style.left = '0';\r\n                fakeDrawerList.style.top = '0';\r\n                fakeDrawerList.style.width = `${boundingClientRect.width}px`;\r\n                fakeDrawerList.style.height = `${boundingClientRect.height}px`;\r\n                fakeDrawerList.classList.add(fakeDrawerClassName());\r\n                document.body.appendChild(fakeDrawerList);\r\n            }).then(() => this.props.joyrideToDrawer());\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <SwipeableDrawer open={this.props.drawerState}\r\n                             onClose={() => this.props.setDrawerState(false)}\r\n                             onOpen={() => this.props.setDrawerState(true)}>\r\n                <div className={this.props.classes.drawerList}\r\n                     role=\"presentation\">\r\n                    <List>\r\n                        {this.drawerItems()\r\n                             .map(this.getListItem())}\r\n                    </List>\r\n                    <Divider/>\r\n                    <List>\r\n                        <ListItem button onClick={() => this.props.resetJoyride()}>\r\n                            <ListItemText primary={strings.drawer.tutorial}/>\r\n                        </ListItem>\r\n                    </List>\r\n                    <Divider/>\r\n                    <List>\r\n                        <ListItem button onClick={() => this.props.setDrawerState(false)}>\r\n                            <ListItemText primary={strings.drawer.about}/>\r\n                        </ListItem>\r\n                    </List>\r\n                </div>\r\n            </SwipeableDrawer>);\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nexport default class GflAppBar extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\"\r\n                                className={this.props.classes.menuButton}\r\n                                color=\"inherit\"\r\n                                aria-label=\"menu\"\r\n                                onClick={() => this.props.setDrawerState(true)}>\r\n                        <MenuIcon/>\r\n                    </IconButton>\r\n                    <div className={this.props.classes.title}>Girls'&nbsp;Frontline logistics&nbsp;calculator</div>\r\n                </Toolbar>\r\n            </AppBar>);\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\nimport ReactJoyride, {ACTIONS, EVENTS, LIFECYCLE, STATUS} from 'react-joyride';\r\n\r\nimport {strings} from '../localization';\r\nimport {fakeDrawerClassName} from './GflDrawer';\r\n\r\nexport default class GflJoyride extends React.Component {\r\n\r\n    handleJoyrideCallback = data => {\r\n        const {index, lifecycle, status, action, type} = data;\r\n\r\n        const closeActions = [ACTIONS.STOP, ACTIONS.CLOSE, ACTIONS.SKIP];\r\n        const finishedStatuses = [STATUS.FINISHED, STATUS.SKIPPED];\r\n        const nextEvents = [EVENTS.STEP_AFTER, EVENTS.TARGET_NOT_FOUND];\r\n\r\n        if (nextEvents.includes(type)) {\r\n            if (LIFECYCLE.COMPLETE === lifecycle && ACTIONS.NEXT === action && 1 === index && !this.props.drawerState) {\r\n                this.props.setDrawerState(true);\r\n            } else if (LIFECYCLE.COMPLETE === lifecycle && ACTIONS.PREV === action && 2 === index && this.props.drawerState) {\r\n                this.props.setDrawerState(false);\r\n                this.props.setJoyrideStep(1);\r\n            } else if (LIFECYCLE.COMPLETE === lifecycle && ACTIONS.NEXT === action && 2 === index && this.props.drawerState) {\r\n                this.props.setDrawerState(false);\r\n                this.props.setJoyrideStep(3);\r\n            } else if (LIFECYCLE.COMPLETE === lifecycle && ACTIONS.PREV === action && 3 === index && !this.props.drawerState) {\r\n                this.props.setDrawerState(true);\r\n                this.props.setJoyrideStep(2);\r\n            } else {\r\n                this.props.setJoyrideStep(index + (action === ACTIONS.PREV ? -1 : 1));\r\n            }\r\n        } else if (finishedStatuses.includes(status) || closeActions.includes(action)) {\r\n            this.props.setDrawerState(false);\r\n            this.props.setJoyrideState(false);\r\n            window.scrollTo({top: 0, behavior: 'smooth'});\r\n        }\r\n    };\r\n\r\n    joyrideSteps = [\r\n        {\r\n            title: strings.joyride.steps[0].title,\r\n            content: strings.joyride.steps[0].content,\r\n            placement: \"center\",\r\n            target: \"body\",\r\n            disableBeacon: true\r\n        },\r\n        {\r\n            title: strings.joyride.steps[1].title,\r\n            content: strings.joyride.steps[1].content,\r\n            placement: \"bottom-start\",\r\n            target: `.${this.props.classes.menuButton}`,\r\n            disableBeacon: true,\r\n            spotlightClicks: true\r\n        },\r\n        {\r\n            title: strings.joyride.steps[2].title,\r\n            content: strings.joyride.steps[2].content,\r\n            placement: \"bottom-start\",\r\n            target: `.${fakeDrawerClassName()}`,\r\n            disableBeacon: true\r\n        },\r\n        {\r\n            title: strings.joyride.steps[3].title,\r\n            content: strings.joyride.steps[3].content,\r\n            placement: \"auto\",\r\n            target: `.${this.props.classes.results}`,\r\n            disableBeacon: true\r\n        }\r\n    ];\r\n\r\n    render() {\r\n        return (\r\n            <ReactJoyride className={this.props.classes.root}\r\n                          getHelpers={this.props.getHelpers}\r\n                          continuous\r\n                          scrollToFirstStep\r\n                          showProgress\r\n                          showSkipButton\r\n                          disableOverlayClose\r\n                          styles={{options: {zIndex: 1500}}}\r\n                          locale={{\r\n                              back: strings.joyride.back,\r\n                              close: strings.joyride.close,\r\n                              last: strings.joyride.last,\r\n                              next: strings.joyride.next,\r\n                              skip: strings.joyride.skip\r\n                          }}\r\n                          run={this.props.joyrideState}\r\n                          stepIndex={this.props.joyrideStep}\r\n                          steps={this.joyrideSteps}\r\n                          callback={this.handleJoyrideCallback}/>);\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Logistics from './logistics';\r\n\r\nReactDOM.render(<Logistics />, document.querySelector('#root'));\r\n","import React from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport {defaults} from './settings';\r\nimport {useStyles} from './style';\r\nimport {strings} from './localization';\r\nimport GflDialog from './component/GflDialog';\r\nimport GflResults from './component/GflResults';\r\nimport GflDrawer from './component/GflDrawer';\r\nimport GflAppBar from './component/GflAppBar';\r\nimport GflJoyride from './component/GflJoyride';\r\n\r\nexport default function LogisticsCalculator() {\r\n    const classes = useStyles();\r\n\r\n    const [joyrideState, setJoyrideState] = React.useState(defaults.joyrideState);\r\n    const [joyrideStep, setJoyrideStep] = React.useState(defaults.joyrideStep);\r\n    const [joyrideHelper, setJoyrideHelper] = React.useState(defaults.joyrideHelper);\r\n\r\n    const [drawerState, setDrawerState] = React.useState(defaults.drawerState);\r\n    const [dialogState, setDialogState] = React.useState(defaults.dialogState);\r\n\r\n    const [checkFrequency, setCheckFrequency] = React.useState(defaults.checkFrequency);\r\n    const [runTime, setRunTime] = React.useState(defaults.runTime);\r\n    const [unlockedChapters, setUnlockedChapters] = React.useState(defaults.unlockedChapters);\r\n\r\n    const [manpowerWeight, setManpowerWeight] = React.useState(defaults.manpowerWeight);\r\n    const [ammunitionWeight, setAmmunitionWeight] = React.useState(defaults.ammunitionWeight);\r\n    const [rationWeight, setRationWeight] = React.useState(defaults.rationWeight);\r\n    const [partsWeight, setPartsWeight] = React.useState(defaults.partsWeight);\r\n\r\n    const [tDollContractWeight, setTDollContractWeight] = React.useState(defaults.tDollContractWeight);\r\n    const [equipmentContractWeight, setEquipmentContractWeight] = React.useState(defaults.equipmentContractWeight);\r\n    const [quickProductionContractWeight, setQuickProductionContractWeight] = React.useState(defaults.quickProductionContractWeight);\r\n    const [quickRepairContractWeight, setQuickRepairContractWeight] = React.useState(defaults.quickRepairContractWeight);\r\n    const [tokenWeight, setTokenWeight] = React.useState(defaults.tokenWeight);\r\n\r\n    const [resultsOrder, setResultsOrder] = React.useState(defaults.resultsOrder);\r\n    const [resultsOrderBy, setResultsOrderBy] = React.useState(defaults.resultsOrderBy);\r\n\r\n    const resources = [\r\n        {name: strings.resourceWeights.manpower, weight: manpowerWeight, weightSetter: setManpowerWeight},\r\n        {name: strings.resourceWeights.ammunition, weight: ammunitionWeight, weightSetter: setAmmunitionWeight},\r\n        {name: strings.resourceWeights.ration, weight: rationWeight, weightSetter: setRationWeight},\r\n        {name: strings.resourceWeights.parts, weight: partsWeight, weightSetter: setPartsWeight}\r\n    ];\r\n\r\n    const items = [\r\n        {name: strings.itemWeights.tDollContract, weight: tDollContractWeight, weightSetter: setTDollContractWeight},\r\n        {name: strings.itemWeights.equipmentContract, weight: equipmentContractWeight, weightSetter: setEquipmentContractWeight},\r\n        {name: strings.itemWeights.quickProductionContract, weight: quickProductionContractWeight, weightSetter: setQuickProductionContractWeight},\r\n        {name: strings.itemWeights.quickRepairContract, weight: quickRepairContractWeight, weightSetter: setQuickRepairContractWeight},\r\n        {name: strings.itemWeights.token, weight: tokenWeight, weightSetter: setTokenWeight}\r\n    ];\r\n\r\n    const handleReset = () => {\r\n        setDrawerState(defaults.drawerState);\r\n        setDialogState(defaults.dialogState);\r\n\r\n        setCheckFrequency(defaults.checkFrequency);\r\n        setRunTime(defaults.runTime);\r\n        setUnlockedChapters(defaults.unlockedChapters);\r\n\r\n        setManpowerWeight(defaults.manpowerWeight);\r\n        setAmmunitionWeight(defaults.ammunitionWeight);\r\n        setRationWeight(defaults.rationWeight);\r\n        setPartsWeight(defaults.partsWeight);\r\n\r\n        setTDollContractWeight(defaults.tDollContractWeight);\r\n        setEquipmentContractWeight(defaults.equipmentContractWeight);\r\n        setQuickProductionContractWeight(defaults.quickProductionContractWeight);\r\n        setQuickRepairContractWeight(defaults.quickRepairContractWeight);\r\n        setTokenWeight(defaults.tokenWeight);\r\n\r\n        setResultsOrder(defaults.resultsOrder);\r\n        setResultsOrderBy(defaults.resultsOrderBy);\r\n    };\r\n\r\n    const spanImportantContent = content => <span className={classes.importantContent}>{content}</span>;\r\n\r\n    const joyrideToDrawer = () => setJoyrideStep(2);\r\n    const resetJoyride = () => {\r\n        setDrawerState(false);\r\n        setJoyrideStep(0);\r\n        setJoyrideState(true);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <GflJoyride classes={classes}\r\n                        getHelpers={setJoyrideHelper}\r\n                        drawerState={drawerState}\r\n                        setDrawerState={setDrawerState}\r\n                        joyrideState={joyrideState}\r\n                        setJoyrideState={setJoyrideState}\r\n                        joyrideStep={joyrideStep}\r\n                        setJoyrideStep={setJoyrideStep}/>\r\n\r\n            <GflAppBar classes={classes}\r\n                       setDrawerState={setDrawerState}/>\r\n\r\n            <GflDrawer classes={classes}\r\n                       drawerState={drawerState}\r\n                       setDrawerState={setDrawerState}\r\n                       setDialogState={setDialogState}\r\n                       joyrideState={joyrideState}\r\n                       joyrideHelper={joyrideHelper}\r\n                       joyrideToDrawer={joyrideToDrawer}\r\n                       resetJoyride={resetJoyride}/>\r\n\r\n            <GflDialog classes={classes}\r\n                       spanImportantContent={spanImportantContent}\r\n                       dialogState={dialogState}\r\n                       setDialogState={setDialogState}\r\n                       checkFrequency={checkFrequency}\r\n                       setCheckFrequency={setCheckFrequency}\r\n                       runTime={runTime}\r\n                       setRunTime={setRunTime}\r\n                       unlockedChapters={unlockedChapters}\r\n                       setUnlockedChapters={setUnlockedChapters}\r\n                       resources={resources}\r\n                       items={items}/>\r\n\r\n            <GflResults classes={classes}\r\n                        resultsOrder={resultsOrder}\r\n                        setResultsOrder={setResultsOrder}\r\n                        resultsOrderBy={resultsOrderBy}\r\n                        setResultsOrderBy={setResultsOrderBy}\r\n                        runTime={runTime}\r\n                        checkFrequency={checkFrequency}\r\n                        unlockedChapters={unlockedChapters}\r\n                        manpower={manpowerWeight}\r\n                        ammunition={ammunitionWeight}\r\n                        ration={rationWeight}\r\n                        parts={partsWeight}\r\n                        tDollContract={tDollContractWeight}\r\n                        equipmentContract={equipmentContractWeight}\r\n                        quickProductionContract={quickProductionContractWeight}\r\n                        quickRepairContract={quickRepairContractWeight}\r\n                        token={tokenWeight}/>\r\n\r\n            <Button className={classes.button}\r\n                    onClick={handleReset}\r\n                    color=\"secondary\">\r\n                Reset\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\n"],"sourceRoot":""}